function generate_word_ladder(begin_word, end_word, word_list):

    ladder_queue = queue of vector of strings

    ladder_queue.push([begin_word])

    visited = set of strings

    visited.insert(begin_word)

    while ladder_queue is not empty:

        ladder = ladder_queue.pop_front()

        last_word = last element of ladder

        for word in word_list:

            if is_adjacent(last_word, word):

                if word not in visited:

                    visited.insert(word)

                    new_ladder = copy of ladder

                    new_ladder.push_back(word)

                    if word equals end_word:

                        return new_ladder

                    ladder_queue.push(new_ladder)

    return no ladder found

end function